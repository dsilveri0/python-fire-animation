#!/usr/bin/env python3

from colr import color
from random import randint
import colourpalette

# Global var (Matrix)
matrix = 0
rows, cols = (15, 15)
palette = colourpalette.ColourPalette()

def initMatrix():
    matrix = [[0 for i in range(cols)] for j in range(rows)]
    for i in range(15):
        matrix[14][i] = 36
    return matrix

# Put inside function
matrix = initMatrix()

def calcMatrixVal():

    m = [[0 for i in range(cols)] for j in range(rows)]

    for i in range(15):
        m[14][i] = 36

    for i in range(1, rows):
        for j in range(cols):
            m[i][j] = m[i-1][j] + randint(0, 5)
            if m[i][j] > 36:
                m[i][j] = 36
    return m

matrix = calcMatrixVal()

# Gives colour based on the index value
def giveColours(matrix):
    for k in range(36):
        if matrix[i][j] == k:
            print(color("  ", fore=(0,0,0), back=palette.get_colour(k)), end="")

# Render colours.
for i in range(15):
    for j in range(15):

        # This prints the numbered matrix with a colored font.
        #print(color(matrix[i][j], fore=(203, 74, 65)), end = " ")

        # This prints a matrix of colored squares.
        #print(color("  ", fore=(0,0,0), back=(203, 74, 65)), end = "")

        #if matrix[i][j] >= 30:
        #    print(color(matrix[i][j], fore=(0,0,0), back=palette.get_colour(i)), end = " ")
        #else:
        #    print(color(matrix[i][j], fore=(0,0,0), back=palette.get_colour(j)), end = " ")

        # The function get_colour prints a color of my choice, based on it's index on the array. The function get_colours prints all colours.
        #print(color("REPETITION NUMBER: i:{} j:{}".format(i, j), fore=(255,0,0)), palette.get_colour(0))

        giveColours(matrix)

    print("")
print("")
